{"code":"import * as React from 'react';\r\nimport { ThemeProvider as StyledThemeProvider } from 'styled-components';\r\nimport { useConfig } from 'docz';\r\nimport getter from 'lodash/get';\r\nexport const get = (val, defaultValue) => (p) => getter(p, `theme.docz.${val}`, defaultValue);\r\nexport const ThemeProvider = ({ children }) => {\r\n    const config = useConfig();\r\n    const next = (prev) => (Object.assign({}, prev, { docz: config.themeConfig }));\r\n    return (React.createElement(StyledThemeProvider, { theme: next },\r\n        React.createElement(React.Fragment, null, children)));\r\n};\r\n","references":["E:/docz-theme-magic-scroll/node_modules/@types/react/index.d.ts","E:/docz-theme-magic-scroll/node_modules/@types/styled-components/index.d.ts","E:/docz-theme-magic-scroll/node_modules/docz/dist/index.d.ts","E:/docz-theme-magic-scroll/node_modules/@types/lodash/ts3.1/get.d.ts"],"dts":{"name":"E:/docz-theme-magic-scroll/utils/theme.d.ts","writeByteOrderMark":false,"text":"import * as React from 'react';\r\nexport declare const get: (val: string, defaultValue?: any) => (p: any) => any;\r\nexport declare const ThemeProvider: React.SFC;\r\n"}}
